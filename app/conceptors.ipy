# %% Imports
import warnings
from pathlib import Path

import matplotlib.pyplot as plt
import numpy as np
import umap
from matplotlib.patches import Ellipse as MEllipse

from wsd.conceptors.conceptor import Conceptor, Ellipse
from wsd.util.angle import rad_to_deg

warnings.filterwarnings("ignore")

path = Path("../data/coarsewsd/split/bert-base-uncased")
senses = list(path.glob("*.npy"))


def load_sense_embs(idx: int):
    print(senses[idx].stem)
    return np.load(senses[idx])


def conceptor(idx: int, aperture: float):
    return Conceptor.from_state_matrix(load_sense_embs(idx), aperture)


def conceptor2d(idx: int, aperture=1):
    emb = load_sense_embs(idx)
    emb2d = umap.UMAP().fit_transform(emb)
    return Conceptor.from_state_matrix(emb2d, aperture)


def plot_ellipse(ell: Ellipse | Conceptor, *ells: Ellipse | Conceptor):
    fig, ax = plt.subplots()
    plt.xlim([-1, 1])
    plt.ylim([-1, 1])

    colors = ["red", "blue", "green", "purple", "yellow", "orange"]

    for idx, item in enumerate([ell] + list(ells)):
        ellipse = item if isinstance(item, Ellipse) else item.to_ellipse()

        p = ax.add_patch(
            MEllipse(
                (0, 0),
                ellipse.semiaxis_x,
                ellipse.semiaxis_y,
                rad_to_deg(ellipse.angle),
            )
        )
        p.set_edgecolor(colors[idx])
        p.set_color(colors[idx])
        p.set_alpha(0.6)

    plt.show()


def plot_eigs(c: Conceptor):
    eigs = np.linalg.eigvalsh(c)
    plt.plot(sorted(eigs))
    # plt.yscale('log')


# %%
